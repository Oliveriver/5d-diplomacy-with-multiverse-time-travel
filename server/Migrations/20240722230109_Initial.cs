using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace _5dDiplomacyWithMultiverseTimeTravel.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Connections",
                columns: table => new
                {
                    Id = table.Column<string>(type: "varchar(11)", maxLength: 11, nullable: false),
                    Type = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Connections", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Games",
                columns: table => new
                {
                    Id = table.Column<int>(type: "serial", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    Players = table.Column<int[]>(type: "int[]", nullable: false),
                    PlayersSubmitted = table.Column<int[]>(type: "int[]", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Games", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Regions",
                columns: table => new
                {
                    Id = table.Column<string>(type: "varchar(5)", maxLength: 5, nullable: false),
                    ParentId = table.Column<string>(type: "varchar(5)", nullable: true),
                    Type = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "varchar", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Regions", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Regions_Regions_ParentId",
                        column: x => x.ParentId,
                        principalTable: "Regions",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "Worlds",
                columns: table => new
                {
                    Id = table.Column<int>(type: "serial", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    GameId = table.Column<int>(type: "int", nullable: false),
                    Iteration = table.Column<int>(type: "int", nullable: false),
                    Winner = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Worlds", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Worlds_Games_GameId",
                        column: x => x.GameId,
                        principalTable: "Games",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "ConnectionMappings",
                columns: table => new
                {
                    ConnectionsId = table.Column<string>(type: "varchar(11)", nullable: false),
                    RegionsId = table.Column<string>(type: "varchar(5)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ConnectionMappings", x => new { x.ConnectionsId, x.RegionsId });
                    table.ForeignKey(
                        name: "FK_ConnectionMappings_Connections_ConnectionsId",
                        column: x => x.ConnectionsId,
                        principalTable: "Connections",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ConnectionMappings_Regions_RegionsId",
                        column: x => x.RegionsId,
                        principalTable: "Regions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Boards",
                columns: table => new
                {
                    Id = table.Column<int>(type: "serial", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WorldId = table.Column<int>(type: "int", nullable: false),
                    Timeline = table.Column<int>(type: "int", nullable: false),
                    Year = table.Column<int>(type: "int", nullable: false),
                    Phase = table.Column<int>(type: "int", nullable: false),
                    ChildTimelines = table.Column<string>(type: "int[]", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Boards", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Boards_Worlds_WorldId",
                        column: x => x.WorldId,
                        principalTable: "Worlds",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Centres",
                columns: table => new
                {
                    Id = table.Column<int>(type: "serial", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BoardId = table.Column<int>(type: "int", nullable: false),
                    Owner = table.Column<int>(type: "int", nullable: true),
                    Location_Phase = table.Column<int>(type: "int", nullable: false),
                    Location_RegionId = table.Column<string>(type: "varchar(5)", maxLength: 5, nullable: false),
                    Location_Timeline = table.Column<int>(type: "int", nullable: false),
                    Location_Year = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Centres", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Centres_Boards_BoardId",
                        column: x => x.BoardId,
                        principalTable: "Boards",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Units",
                columns: table => new
                {
                    Id = table.Column<int>(type: "serial", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    BoardId = table.Column<int>(type: "int", nullable: false),
                    Owner = table.Column<int>(type: "int", nullable: false),
                    Type = table.Column<int>(type: "int", nullable: false),
                    MustRetreat = table.Column<bool>(type: "bool", nullable: false),
                    Location_Phase = table.Column<int>(type: "int", nullable: false),
                    Location_RegionId = table.Column<string>(type: "varchar(5)", maxLength: 5, nullable: false),
                    Location_Timeline = table.Column<int>(type: "int", nullable: false),
                    Location_Year = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Units", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Units_Boards_BoardId",
                        column: x => x.BoardId,
                        principalTable: "Boards",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Orders",
                columns: table => new
                {
                    Id = table.Column<int>(type: "serial", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    WorldId = table.Column<int>(type: "int", nullable: false),
                    Status = table.Column<int>(type: "int", nullable: false),
                    UnitId = table.Column<int>(type: "int", nullable: true),
                    Discriminator = table.Column<string>(type: "varchar(8)", maxLength: 8, nullable: false),
                    Location_Phase = table.Column<int>(type: "int", nullable: false),
                    Location_RegionId = table.Column<string>(type: "varchar(5)", maxLength: 5, nullable: false),
                    Location_Timeline = table.Column<int>(type: "int", nullable: false),
                    Location_Year = table.Column<int>(type: "int", nullable: false),
                    Destination_Phase = table.Column<int>(type: "int", nullable: true),
                    Destination_RegionId = table.Column<string>(type: "varchar(5)", maxLength: 5, nullable: true),
                    Destination_Timeline = table.Column<int>(type: "int", nullable: true),
                    Destination_Year = table.Column<int>(type: "int", nullable: true),
                    Midpoint_Phase = table.Column<int>(type: "int", nullable: true),
                    Midpoint_RegionId = table.Column<string>(type: "varchar(5)", maxLength: 5, nullable: true),
                    Midpoint_Timeline = table.Column<int>(type: "int", nullable: true),
                    Midpoint_Year = table.Column<int>(type: "int", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Orders", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Orders_Units_UnitId",
                        column: x => x.UnitId,
                        principalTable: "Units",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_Orders_Worlds_WorldId",
                        column: x => x.WorldId,
                        principalTable: "Worlds",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Connections",
                columns: new[] { "Id", "Type" },
                values: new object[,]
                {
                    { "ADR-Alb", 2 },
                    { "ADR-Apu", 2 },
                    { "ADR-ION", 2 },
                    { "ADR-Tri", 2 },
                    { "ADR-Ven", 2 },
                    { "AEG-Bul_S", 2 },
                    { "AEG-Con", 2 },
                    { "AEG-EAS", 2 },
                    { "AEG-Gre", 2 },
                    { "AEG-ION", 2 },
                    { "AEG-Smy", 2 },
                    { "Alb-Gre", 1 },
                    { "Alb-ION", 2 },
                    { "Alb-Ser", 0 },
                    { "Alb-Tri", 1 },
                    { "Ank-Arm", 1 },
                    { "Ank-BLA", 2 },
                    { "Ank-Con", 1 },
                    { "Ank-Smy", 0 },
                    { "Apu-ION", 2 },
                    { "Apu-Nap", 1 },
                    { "Apu-Rom", 0 },
                    { "Apu-Ven", 0 },
                    { "Arm-BLA", 2 },
                    { "Arm-Sev", 1 },
                    { "Arm-Smy", 0 },
                    { "Arm-Syr", 0 },
                    { "BAL-Ber", 2 },
                    { "BAL-BOT", 2 },
                    { "BAL-Den", 2 },
                    { "BAL-Kie", 2 },
                    { "BAL-Lvn", 2 },
                    { "BAL-Pru", 2 },
                    { "BAL-Swe", 2 },
                    { "BAR-NWG", 2 },
                    { "BAR-Nwy", 2 },
                    { "BAR-Stp_N", 2 },
                    { "Bel-Bur", 0 },
                    { "Bel-ENG", 2 },
                    { "Bel-Hol", 1 },
                    { "Bel-NTH", 2 },
                    { "Bel-Pic", 1 },
                    { "Bel-Ruh", 0 },
                    { "Ber-Kie", 1 },
                    { "Ber-Mun", 0 },
                    { "Ber-Pru", 1 },
                    { "Ber-Sil", 0 },
                    { "BLA-Bul_E", 2 },
                    { "BLA-Con", 2 },
                    { "BLA-Rum", 2 },
                    { "BLA-Sev", 2 },
                    { "Boh-Gal", 0 },
                    { "Boh-Mun", 0 },
                    { "Boh-Sil", 0 },
                    { "Boh-Tyr", 0 },
                    { "Boh-Vie", 0 },
                    { "BOT-Fin", 2 },
                    { "BOT-Lvn", 2 },
                    { "BOT-Stp_S", 2 },
                    { "BOT-Swe", 2 },
                    { "Bre-ENG", 2 },
                    { "Bre-Gas", 1 },
                    { "Bre-MAO", 2 },
                    { "Bre-Par", 0 },
                    { "Bre-Pic", 1 },
                    { "Bud-Gal", 0 },
                    { "Bud-Rum", 0 },
                    { "Bud-Ser", 0 },
                    { "Bud-Tri", 0 },
                    { "Bud-Vie", 0 },
                    { "Bul_E-Con", 2 },
                    { "Bul_E-Rum", 2 },
                    { "Bul_S-Con", 2 },
                    { "Bul_S-Gre", 2 },
                    { "Bul-Con", 0 },
                    { "Bul-Gre", 0 },
                    { "Bul-Rum", 0 },
                    { "Bul-Ser", 0 },
                    { "Bur-Gas", 0 },
                    { "Bur-Mar", 0 },
                    { "Bur-Mun", 0 },
                    { "Bur-Par", 0 },
                    { "Bur-Pic", 0 },
                    { "Bur-Ruh", 0 },
                    { "Cly-Edi", 1 },
                    { "Cly-Lvp", 1 },
                    { "Cly-NAO", 2 },
                    { "Cly-NWG", 2 },
                    { "Con-Smy", 1 },
                    { "Den-HEL", 2 },
                    { "Den-Kie", 1 },
                    { "Den-NTH", 2 },
                    { "Den-SKA", 2 },
                    { "Den-Swe", 1 },
                    { "EAS-ION", 2 },
                    { "EAS-Smy", 2 },
                    { "EAS-Syr", 2 },
                    { "Edi-Lvp", 0 },
                    { "Edi-NTH", 2 },
                    { "Edi-NWG", 2 },
                    { "Edi-Yor", 1 },
                    { "ENG-IRI", 2 },
                    { "ENG-Lon", 2 },
                    { "ENG-MAO", 2 },
                    { "ENG-NTH", 2 },
                    { "ENG-Pic", 2 },
                    { "ENG-Wal", 2 },
                    { "Fin-Nwy", 1 },
                    { "Fin-Stp", 0 },
                    { "Fin-Stp_S", 2 },
                    { "Fin-Swe", 1 },
                    { "Gal-Rum", 0 },
                    { "Gal-Sil", 0 },
                    { "Gal-Ukr", 0 },
                    { "Gal-Vie", 0 },
                    { "Gal-War", 0 },
                    { "Gas-MAO", 2 },
                    { "Gas-Mar", 0 },
                    { "Gas-Par", 0 },
                    { "Gas-Spa", 0 },
                    { "Gas-Spa_N", 2 },
                    { "Gas-Spa_S", 2 },
                    { "Gre-ION", 2 },
                    { "Gre-Ser", 0 },
                    { "HEL-Hol", 2 },
                    { "HEL-Kie", 2 },
                    { "HEL-NTH", 2 },
                    { "Hol-Kie", 1 },
                    { "Hol-NTH", 2 },
                    { "Hol-Ruh", 0 },
                    { "ION-Nap", 2 },
                    { "ION-Tun", 2 },
                    { "ION-TYS", 2 },
                    { "IRI-Lvp", 2 },
                    { "IRI-MAO", 2 },
                    { "IRI-NAO", 2 },
                    { "IRI-Wal", 2 },
                    { "Kie-Mun", 0 },
                    { "Kie-Ruh", 0 },
                    { "Lon-NTH", 2 },
                    { "Lon-Wal", 1 },
                    { "Lon-Yor", 1 },
                    { "Lvn-Mos", 0 },
                    { "Lvn-Pru", 1 },
                    { "Lvn-Stp", 0 },
                    { "Lvn-Stp_S", 2 },
                    { "Lvn-War", 0 },
                    { "Lvp-NAO", 2 },
                    { "Lvp-Wal", 1 },
                    { "Lvp-Yor", 0 },
                    { "LYO-Mar", 2 },
                    { "LYO-Pie", 2 },
                    { "LYO-Spa_S", 2 },
                    { "LYO-Tus", 2 },
                    { "LYO-TYS", 2 },
                    { "LYO-WES", 2 },
                    { "MAO-Naf", 2 },
                    { "MAO-Por", 2 },
                    { "MAO-Spa_N", 2 },
                    { "MAO-Spa_S", 2 },
                    { "MAO-WES", 2 },
                    { "Mar-Pie", 1 },
                    { "Mar-Spa", 0 },
                    { "Mar-Spa_S", 2 },
                    { "Mos-Sev", 0 },
                    { "Mos-Stp", 0 },
                    { "Mos-Ukr", 0 },
                    { "Mos-War", 0 },
                    { "Mun-Ruh", 0 },
                    { "Mun-Sil", 0 },
                    { "Mun-Tyr", 0 },
                    { "Naf-Tun", 1 },
                    { "Naf-WES", 2 },
                    { "NAO-NWG", 2 },
                    { "Nap-Rom", 1 },
                    { "Nap-TYS", 2 },
                    { "NTH-NWG", 2 },
                    { "NTH-Nwy", 2 },
                    { "NTH-SKA", 2 },
                    { "NTH-Yor", 2 },
                    { "NWG-Nwy", 2 },
                    { "Nwy-SKA", 2 },
                    { "Nwy-Stp", 0 },
                    { "Nwy-Stp_N", 2 },
                    { "Nwy-Swe", 1 },
                    { "Par-Pic", 0 },
                    { "Pie-Tus", 1 },
                    { "Pie-Tyr", 0 },
                    { "Pie-Ven", 0 },
                    { "Por-Spa", 0 },
                    { "Por-Spa_N", 2 },
                    { "Por-Spa_S", 2 },
                    { "Pru-Sil", 0 },
                    { "Pru-War", 0 },
                    { "Rom-Tus", 1 },
                    { "Rom-TYS", 2 },
                    { "Rom-Ven", 0 },
                    { "Rum-Ser", 0 },
                    { "Rum-Sev", 1 },
                    { "Rum-Ukr", 0 },
                    { "Ser-Tri", 0 },
                    { "Sev-Ukr", 0 },
                    { "Sil-War", 0 },
                    { "SKA-Swe", 2 },
                    { "Smy-Syr", 1 },
                    { "Spa_S-WES", 2 },
                    { "Tri-Tyr", 0 },
                    { "Tri-Ven", 1 },
                    { "Tri-Vie", 0 },
                    { "Tun-TYS", 2 },
                    { "Tun-WES", 2 },
                    { "Tus-TYS", 2 },
                    { "Tus-Ven", 0 },
                    { "Tyr-Ven", 0 },
                    { "Tyr-Vie", 0 },
                    { "TYS-WES", 2 },
                    { "Ukr-War", 0 },
                    { "Wal-Yor", 0 }
                });

            migrationBuilder.InsertData(
                table: "Regions",
                columns: new[] { "Id", "Name", "ParentId", "Type" },
                values: new object[,]
                {
                    { "ADR", "Adriatic Sea", null, 2 },
                    { "AEG", "Aegean Sea", null, 2 },
                    { "Alb", "Albania", null, 1 },
                    { "Ank", "Ankara", null, 1 },
                    { "Apu", "Apulia", null, 1 },
                    { "Arm", "Armenia", null, 1 },
                    { "BAL", "Baltic Sea", null, 2 },
                    { "BAR", "Barents Sea", null, 2 },
                    { "Bel", "Belgium", null, 1 },
                    { "Ber", "Berlin", null, 1 },
                    { "BLA", "Black Sea", null, 2 },
                    { "Boh", "Bohemia", null, 0 },
                    { "BOT", "Gulf of Bothnia", null, 2 },
                    { "Bre", "Brest", null, 1 },
                    { "Bud", "Budapest", null, 0 },
                    { "Bul", "Bulgaria", null, 0 },
                    { "Bur", "Burgandy", null, 0 },
                    { "Cly", "Clyde", null, 1 },
                    { "Con", "Constantinople", null, 1 },
                    { "Den", "Denmark", null, 1 },
                    { "EAS", "Eastern Mediterranean", null, 2 },
                    { "Edi", "Edinburgh", null, 1 },
                    { "ENG", "English Channel", null, 2 },
                    { "Fin", "Finland", null, 1 },
                    { "Gal", "Galicia", null, 0 },
                    { "Gas", "Gascony", null, 1 },
                    { "Gre", "Greece", null, 1 },
                    { "HEL", "Heligoland Bight", null, 2 },
                    { "Hol", "Holland", null, 1 },
                    { "ION", "Ionian Sea", null, 2 },
                    { "IRI", "Irish Sea", null, 2 },
                    { "Kie", "Kiel", null, 1 },
                    { "Lon", "London", null, 1 },
                    { "Lvn", "Livonia", null, 1 },
                    { "Lvp", "Liverpool", null, 1 },
                    { "LYO", "Gulf of Lyon", null, 2 },
                    { "MAO", "Mid-Atlantic Ocean", null, 2 },
                    { "Mar", "Marseilles", null, 1 },
                    { "Mos", "Moscow", null, 0 },
                    { "Mun", "Munich", null, 0 },
                    { "Naf", "North Africa", null, 1 },
                    { "NAO", "North Atlantic Ocean", null, 2 },
                    { "Nap", "Naples", null, 1 },
                    { "NTH", "North Sea", null, 2 },
                    { "NWG", "Norwegian Sea", null, 2 },
                    { "Nwy", "Norway", null, 1 },
                    { "Par", "Paris", null, 0 },
                    { "Pic", "Picardy", null, 1 },
                    { "Pie", "Piedmont", null, 1 },
                    { "Por", "Portugal", null, 1 },
                    { "Pru", "Prussia", null, 1 },
                    { "Rom", "Rome", null, 1 },
                    { "Ruh", "Ruhr", null, 0 },
                    { "Rum", "Rumania", null, 1 },
                    { "Ser", "Serbia", null, 0 },
                    { "Sev", "Sevastopol", null, 1 },
                    { "Sil", "Silesia", null, 0 },
                    { "SKA", "Skagerrak", null, 2 },
                    { "Smy", "Smyrna", null, 1 },
                    { "Spa", "Spain", null, 0 },
                    { "Stp", "St Petersburg", null, 0 },
                    { "Swe", "Sweden", null, 1 },
                    { "Syr", "Syria", null, 1 },
                    { "Tri", "Trieste", null, 1 },
                    { "Tun", "Tunis", null, 1 },
                    { "Tus", "Tuscany", null, 1 },
                    { "Tyr", "Tyrolia", null, 0 },
                    { "TYS", "Tyrhennian Sea", null, 2 },
                    { "Ukr", "Ukraine", null, 0 },
                    { "Ven", "Venice", null, 1 },
                    { "Vie", "Vienna", null, 0 },
                    { "Wal", "Wales", null, 1 },
                    { "War", "Warsaw", null, 0 },
                    { "WES", "Western Mediterranean", null, 2 },
                    { "Yor", "York", null, 1 }
                });

            migrationBuilder.InsertData(
                table: "ConnectionMappings",
                columns: new[] { "ConnectionsId", "RegionsId" },
                values: new object[,]
                {
                    { "ADR-Alb", "ADR" },
                    { "ADR-Alb", "Alb" },
                    { "ADR-Apu", "ADR" },
                    { "ADR-Apu", "Apu" },
                    { "ADR-ION", "ADR" },
                    { "ADR-ION", "ION" },
                    { "ADR-Tri", "ADR" },
                    { "ADR-Tri", "Tri" },
                    { "ADR-Ven", "ADR" },
                    { "ADR-Ven", "Ven" },
                    { "AEG-Bul_S", "AEG" },
                    { "AEG-Con", "AEG" },
                    { "AEG-Con", "Con" },
                    { "AEG-EAS", "AEG" },
                    { "AEG-EAS", "EAS" },
                    { "AEG-Gre", "AEG" },
                    { "AEG-Gre", "Gre" },
                    { "AEG-ION", "AEG" },
                    { "AEG-ION", "ION" },
                    { "AEG-Smy", "AEG" },
                    { "AEG-Smy", "Smy" },
                    { "Alb-Gre", "Alb" },
                    { "Alb-Gre", "Gre" },
                    { "Alb-ION", "Alb" },
                    { "Alb-ION", "ION" },
                    { "Alb-Ser", "Alb" },
                    { "Alb-Ser", "Ser" },
                    { "Alb-Tri", "Alb" },
                    { "Alb-Tri", "Tri" },
                    { "Ank-Arm", "Ank" },
                    { "Ank-Arm", "Arm" },
                    { "Ank-BLA", "Ank" },
                    { "Ank-BLA", "BLA" },
                    { "Ank-Con", "Ank" },
                    { "Ank-Con", "Con" },
                    { "Ank-Smy", "Ank" },
                    { "Ank-Smy", "Smy" },
                    { "Apu-ION", "Apu" },
                    { "Apu-ION", "ION" },
                    { "Apu-Nap", "Apu" },
                    { "Apu-Nap", "Nap" },
                    { "Apu-Rom", "Apu" },
                    { "Apu-Rom", "Rom" },
                    { "Apu-Ven", "Apu" },
                    { "Apu-Ven", "Ven" },
                    { "Arm-BLA", "Arm" },
                    { "Arm-BLA", "BLA" },
                    { "Arm-Sev", "Arm" },
                    { "Arm-Sev", "Sev" },
                    { "Arm-Smy", "Arm" },
                    { "Arm-Smy", "Smy" },
                    { "Arm-Syr", "Arm" },
                    { "Arm-Syr", "Syr" },
                    { "BAL-Ber", "BAL" },
                    { "BAL-Ber", "Ber" },
                    { "BAL-BOT", "BAL" },
                    { "BAL-BOT", "BOT" },
                    { "BAL-Den", "BAL" },
                    { "BAL-Den", "Den" },
                    { "BAL-Kie", "BAL" },
                    { "BAL-Kie", "Kie" },
                    { "BAL-Lvn", "BAL" },
                    { "BAL-Lvn", "Lvn" },
                    { "BAL-Pru", "BAL" },
                    { "BAL-Pru", "Pru" },
                    { "BAL-Swe", "BAL" },
                    { "BAL-Swe", "Swe" },
                    { "BAR-NWG", "BAR" },
                    { "BAR-NWG", "NWG" },
                    { "BAR-Nwy", "BAR" },
                    { "BAR-Nwy", "Nwy" },
                    { "BAR-Stp_N", "BAR" },
                    { "Bel-Bur", "Bel" },
                    { "Bel-Bur", "Bur" },
                    { "Bel-ENG", "Bel" },
                    { "Bel-ENG", "ENG" },
                    { "Bel-Hol", "Bel" },
                    { "Bel-Hol", "Hol" },
                    { "Bel-NTH", "Bel" },
                    { "Bel-NTH", "NTH" },
                    { "Bel-Pic", "Bel" },
                    { "Bel-Pic", "Pic" },
                    { "Bel-Ruh", "Bel" },
                    { "Bel-Ruh", "Ruh" },
                    { "Ber-Kie", "Ber" },
                    { "Ber-Kie", "Kie" },
                    { "Ber-Mun", "Ber" },
                    { "Ber-Mun", "Mun" },
                    { "Ber-Pru", "Ber" },
                    { "Ber-Pru", "Pru" },
                    { "Ber-Sil", "Ber" },
                    { "Ber-Sil", "Sil" },
                    { "BLA-Bul_E", "BLA" },
                    { "BLA-Con", "BLA" },
                    { "BLA-Con", "Con" },
                    { "BLA-Rum", "BLA" },
                    { "BLA-Rum", "Rum" },
                    { "BLA-Sev", "BLA" },
                    { "BLA-Sev", "Sev" },
                    { "Boh-Gal", "Boh" },
                    { "Boh-Gal", "Gal" },
                    { "Boh-Mun", "Boh" },
                    { "Boh-Mun", "Mun" },
                    { "Boh-Sil", "Boh" },
                    { "Boh-Sil", "Sil" },
                    { "Boh-Tyr", "Boh" },
                    { "Boh-Tyr", "Tyr" },
                    { "Boh-Vie", "Boh" },
                    { "Boh-Vie", "Vie" },
                    { "BOT-Fin", "BOT" },
                    { "BOT-Fin", "Fin" },
                    { "BOT-Lvn", "BOT" },
                    { "BOT-Lvn", "Lvn" },
                    { "BOT-Stp_S", "BOT" },
                    { "BOT-Swe", "BOT" },
                    { "BOT-Swe", "Swe" },
                    { "Bre-ENG", "Bre" },
                    { "Bre-ENG", "ENG" },
                    { "Bre-Gas", "Bre" },
                    { "Bre-Gas", "Gas" },
                    { "Bre-MAO", "Bre" },
                    { "Bre-MAO", "MAO" },
                    { "Bre-Par", "Bre" },
                    { "Bre-Par", "Par" },
                    { "Bre-Pic", "Bre" },
                    { "Bre-Pic", "Pic" },
                    { "Bud-Gal", "Bud" },
                    { "Bud-Gal", "Gal" },
                    { "Bud-Rum", "Bud" },
                    { "Bud-Rum", "Rum" },
                    { "Bud-Ser", "Bud" },
                    { "Bud-Ser", "Ser" },
                    { "Bud-Tri", "Bud" },
                    { "Bud-Tri", "Tri" },
                    { "Bud-Vie", "Bud" },
                    { "Bud-Vie", "Vie" },
                    { "Bul_E-Con", "Con" },
                    { "Bul_E-Rum", "Rum" },
                    { "Bul_S-Con", "Con" },
                    { "Bul_S-Gre", "Gre" },
                    { "Bul-Con", "Bul" },
                    { "Bul-Con", "Con" },
                    { "Bul-Gre", "Bul" },
                    { "Bul-Gre", "Gre" },
                    { "Bul-Rum", "Bul" },
                    { "Bul-Rum", "Rum" },
                    { "Bul-Ser", "Bul" },
                    { "Bul-Ser", "Ser" },
                    { "Bur-Gas", "Bur" },
                    { "Bur-Gas", "Gas" },
                    { "Bur-Mar", "Bur" },
                    { "Bur-Mar", "Mar" },
                    { "Bur-Mun", "Bur" },
                    { "Bur-Mun", "Mun" },
                    { "Bur-Par", "Bur" },
                    { "Bur-Par", "Par" },
                    { "Bur-Pic", "Bur" },
                    { "Bur-Pic", "Pic" },
                    { "Bur-Ruh", "Bur" },
                    { "Bur-Ruh", "Ruh" },
                    { "Cly-Edi", "Cly" },
                    { "Cly-Edi", "Edi" },
                    { "Cly-Lvp", "Cly" },
                    { "Cly-Lvp", "Lvp" },
                    { "Cly-NAO", "Cly" },
                    { "Cly-NAO", "NAO" },
                    { "Cly-NWG", "Cly" },
                    { "Cly-NWG", "NWG" },
                    { "Con-Smy", "Con" },
                    { "Con-Smy", "Smy" },
                    { "Den-HEL", "Den" },
                    { "Den-HEL", "HEL" },
                    { "Den-Kie", "Den" },
                    { "Den-Kie", "Kie" },
                    { "Den-NTH", "Den" },
                    { "Den-NTH", "NTH" },
                    { "Den-SKA", "Den" },
                    { "Den-SKA", "SKA" },
                    { "Den-Swe", "Den" },
                    { "Den-Swe", "Swe" },
                    { "EAS-ION", "EAS" },
                    { "EAS-ION", "ION" },
                    { "EAS-Smy", "EAS" },
                    { "EAS-Smy", "Smy" },
                    { "EAS-Syr", "EAS" },
                    { "EAS-Syr", "Syr" },
                    { "Edi-Lvp", "Edi" },
                    { "Edi-Lvp", "Lvp" },
                    { "Edi-NTH", "Edi" },
                    { "Edi-NTH", "NTH" },
                    { "Edi-NWG", "Edi" },
                    { "Edi-NWG", "NWG" },
                    { "Edi-Yor", "Edi" },
                    { "Edi-Yor", "Yor" },
                    { "ENG-IRI", "ENG" },
                    { "ENG-IRI", "IRI" },
                    { "ENG-Lon", "ENG" },
                    { "ENG-Lon", "Lon" },
                    { "ENG-MAO", "ENG" },
                    { "ENG-MAO", "MAO" },
                    { "ENG-NTH", "ENG" },
                    { "ENG-NTH", "NTH" },
                    { "ENG-Pic", "ENG" },
                    { "ENG-Pic", "Pic" },
                    { "ENG-Wal", "ENG" },
                    { "ENG-Wal", "Wal" },
                    { "Fin-Nwy", "Fin" },
                    { "Fin-Nwy", "Nwy" },
                    { "Fin-Stp", "Fin" },
                    { "Fin-Stp", "Stp" },
                    { "Fin-Stp_S", "Fin" },
                    { "Fin-Swe", "Fin" },
                    { "Fin-Swe", "Swe" },
                    { "Gal-Rum", "Gal" },
                    { "Gal-Rum", "Rum" },
                    { "Gal-Sil", "Gal" },
                    { "Gal-Sil", "Sil" },
                    { "Gal-Ukr", "Gal" },
                    { "Gal-Ukr", "Ukr" },
                    { "Gal-Vie", "Gal" },
                    { "Gal-Vie", "Vie" },
                    { "Gal-War", "Gal" },
                    { "Gal-War", "War" },
                    { "Gas-MAO", "Gas" },
                    { "Gas-MAO", "MAO" },
                    { "Gas-Mar", "Gas" },
                    { "Gas-Mar", "Mar" },
                    { "Gas-Par", "Gas" },
                    { "Gas-Par", "Par" },
                    { "Gas-Spa", "Gas" },
                    { "Gas-Spa", "Spa" },
                    { "Gas-Spa_N", "Gas" },
                    { "Gas-Spa_S", "Gas" },
                    { "Gre-ION", "Gre" },
                    { "Gre-ION", "ION" },
                    { "Gre-Ser", "Gre" },
                    { "Gre-Ser", "Ser" },
                    { "HEL-Hol", "HEL" },
                    { "HEL-Hol", "Hol" },
                    { "HEL-Kie", "HEL" },
                    { "HEL-Kie", "Kie" },
                    { "HEL-NTH", "HEL" },
                    { "HEL-NTH", "NTH" },
                    { "Hol-Kie", "Hol" },
                    { "Hol-Kie", "Kie" },
                    { "Hol-NTH", "Hol" },
                    { "Hol-NTH", "NTH" },
                    { "Hol-Ruh", "Hol" },
                    { "Hol-Ruh", "Ruh" },
                    { "ION-Nap", "ION" },
                    { "ION-Nap", "Nap" },
                    { "ION-Tun", "ION" },
                    { "ION-Tun", "Tun" },
                    { "ION-TYS", "ION" },
                    { "ION-TYS", "TYS" },
                    { "IRI-Lvp", "IRI" },
                    { "IRI-Lvp", "Lvp" },
                    { "IRI-MAO", "IRI" },
                    { "IRI-MAO", "MAO" },
                    { "IRI-NAO", "IRI" },
                    { "IRI-NAO", "NAO" },
                    { "IRI-Wal", "IRI" },
                    { "IRI-Wal", "Wal" },
                    { "Kie-Mun", "Kie" },
                    { "Kie-Mun", "Mun" },
                    { "Kie-Ruh", "Kie" },
                    { "Kie-Ruh", "Ruh" },
                    { "Lon-NTH", "Lon" },
                    { "Lon-NTH", "NTH" },
                    { "Lon-Wal", "Lon" },
                    { "Lon-Wal", "Wal" },
                    { "Lon-Yor", "Lon" },
                    { "Lon-Yor", "Yor" },
                    { "Lvn-Mos", "Lvn" },
                    { "Lvn-Mos", "Mos" },
                    { "Lvn-Pru", "Lvn" },
                    { "Lvn-Pru", "Pru" },
                    { "Lvn-Stp", "Lvn" },
                    { "Lvn-Stp", "Stp" },
                    { "Lvn-Stp_S", "Lvn" },
                    { "Lvn-War", "Lvn" },
                    { "Lvn-War", "War" },
                    { "Lvp-NAO", "Lvp" },
                    { "Lvp-NAO", "NAO" },
                    { "Lvp-Wal", "Lvp" },
                    { "Lvp-Wal", "Wal" },
                    { "Lvp-Yor", "Lvp" },
                    { "Lvp-Yor", "Yor" },
                    { "LYO-Mar", "LYO" },
                    { "LYO-Mar", "Mar" },
                    { "LYO-Pie", "LYO" },
                    { "LYO-Pie", "Pie" },
                    { "LYO-Spa_S", "LYO" },
                    { "LYO-Tus", "LYO" },
                    { "LYO-Tus", "Tus" },
                    { "LYO-TYS", "LYO" },
                    { "LYO-TYS", "TYS" },
                    { "LYO-WES", "LYO" },
                    { "LYO-WES", "WES" },
                    { "MAO-Naf", "MAO" },
                    { "MAO-Naf", "Naf" },
                    { "MAO-Por", "MAO" },
                    { "MAO-Por", "Por" },
                    { "MAO-Spa_N", "MAO" },
                    { "MAO-Spa_S", "MAO" },
                    { "MAO-WES", "MAO" },
                    { "MAO-WES", "WES" },
                    { "Mar-Pie", "Mar" },
                    { "Mar-Pie", "Pie" },
                    { "Mar-Spa", "Mar" },
                    { "Mar-Spa", "Spa" },
                    { "Mar-Spa_S", "Mar" },
                    { "Mos-Sev", "Mos" },
                    { "Mos-Sev", "Sev" },
                    { "Mos-Stp", "Mos" },
                    { "Mos-Stp", "Stp" },
                    { "Mos-Ukr", "Mos" },
                    { "Mos-Ukr", "Ukr" },
                    { "Mos-War", "Mos" },
                    { "Mos-War", "War" },
                    { "Mun-Ruh", "Mun" },
                    { "Mun-Ruh", "Ruh" },
                    { "Mun-Sil", "Mun" },
                    { "Mun-Sil", "Sil" },
                    { "Mun-Tyr", "Mun" },
                    { "Mun-Tyr", "Tyr" },
                    { "Naf-Tun", "Naf" },
                    { "Naf-Tun", "Tun" },
                    { "Naf-WES", "Naf" },
                    { "Naf-WES", "WES" },
                    { "NAO-NWG", "NAO" },
                    { "NAO-NWG", "NWG" },
                    { "Nap-Rom", "Nap" },
                    { "Nap-Rom", "Rom" },
                    { "Nap-TYS", "Nap" },
                    { "Nap-TYS", "TYS" },
                    { "NTH-NWG", "NTH" },
                    { "NTH-NWG", "NWG" },
                    { "NTH-Nwy", "NTH" },
                    { "NTH-Nwy", "Nwy" },
                    { "NTH-SKA", "NTH" },
                    { "NTH-SKA", "SKA" },
                    { "NTH-Yor", "NTH" },
                    { "NTH-Yor", "Yor" },
                    { "NWG-Nwy", "NWG" },
                    { "NWG-Nwy", "Nwy" },
                    { "Nwy-SKA", "Nwy" },
                    { "Nwy-SKA", "SKA" },
                    { "Nwy-Stp", "Nwy" },
                    { "Nwy-Stp", "Stp" },
                    { "Nwy-Stp_N", "Nwy" },
                    { "Nwy-Swe", "Nwy" },
                    { "Nwy-Swe", "Swe" },
                    { "Par-Pic", "Par" },
                    { "Par-Pic", "Pic" },
                    { "Pie-Tus", "Pie" },
                    { "Pie-Tus", "Tus" },
                    { "Pie-Tyr", "Pie" },
                    { "Pie-Tyr", "Tyr" },
                    { "Pie-Ven", "Pie" },
                    { "Pie-Ven", "Ven" },
                    { "Por-Spa", "Por" },
                    { "Por-Spa", "Spa" },
                    { "Por-Spa_N", "Por" },
                    { "Por-Spa_S", "Por" },
                    { "Pru-Sil", "Pru" },
                    { "Pru-Sil", "Sil" },
                    { "Pru-War", "Pru" },
                    { "Pru-War", "War" },
                    { "Rom-Tus", "Rom" },
                    { "Rom-Tus", "Tus" },
                    { "Rom-TYS", "Rom" },
                    { "Rom-TYS", "TYS" },
                    { "Rom-Ven", "Rom" },
                    { "Rom-Ven", "Ven" },
                    { "Rum-Ser", "Rum" },
                    { "Rum-Ser", "Ser" },
                    { "Rum-Sev", "Rum" },
                    { "Rum-Sev", "Sev" },
                    { "Rum-Ukr", "Rum" },
                    { "Rum-Ukr", "Ukr" },
                    { "Ser-Tri", "Ser" },
                    { "Ser-Tri", "Tri" },
                    { "Sev-Ukr", "Sev" },
                    { "Sev-Ukr", "Ukr" },
                    { "Sil-War", "Sil" },
                    { "Sil-War", "War" },
                    { "SKA-Swe", "SKA" },
                    { "SKA-Swe", "Swe" },
                    { "Smy-Syr", "Smy" },
                    { "Smy-Syr", "Syr" },
                    { "Spa_S-WES", "WES" },
                    { "Tri-Tyr", "Tri" },
                    { "Tri-Tyr", "Tyr" },
                    { "Tri-Ven", "Tri" },
                    { "Tri-Ven", "Ven" },
                    { "Tri-Vie", "Tri" },
                    { "Tri-Vie", "Vie" },
                    { "Tun-TYS", "Tun" },
                    { "Tun-TYS", "TYS" },
                    { "Tun-WES", "Tun" },
                    { "Tun-WES", "WES" },
                    { "Tus-TYS", "Tus" },
                    { "Tus-TYS", "TYS" },
                    { "Tus-Ven", "Tus" },
                    { "Tus-Ven", "Ven" },
                    { "Tyr-Ven", "Tyr" },
                    { "Tyr-Ven", "Ven" },
                    { "Tyr-Vie", "Tyr" },
                    { "Tyr-Vie", "Vie" },
                    { "TYS-WES", "TYS" },
                    { "TYS-WES", "WES" },
                    { "Ukr-War", "Ukr" },
                    { "Ukr-War", "War" },
                    { "Wal-Yor", "Wal" },
                    { "Wal-Yor", "Yor" }
                });

            migrationBuilder.InsertData(
                table: "Regions",
                columns: new[] { "Id", "Name", "ParentId", "Type" },
                values: new object[,]
                {
                    { "Bul_E", "Bulgaria (east coast)", "Bul", 1 },
                    { "Bul_S", "Bulgaria (south coast)", "Bul", 1 },
                    { "Spa_N", "Spain (north coast)", "Spa", 1 },
                    { "Spa_S", "Spain (south coast)", "Spa", 1 },
                    { "Stp_N", "St Petersburg (north coast)", "Stp", 1 },
                    { "Stp_S", "St Petersburg (south coast)", "Stp", 1 }
                });

            migrationBuilder.InsertData(
                table: "ConnectionMappings",
                columns: new[] { "ConnectionsId", "RegionsId" },
                values: new object[,]
                {
                    { "AEG-Bul_S", "Bul_S" },
                    { "BAR-Stp_N", "Stp_N" },
                    { "BLA-Bul_E", "Bul_E" },
                    { "BOT-Stp_S", "Stp_S" },
                    { "Bul_E-Con", "Bul_E" },
                    { "Bul_E-Rum", "Bul_E" },
                    { "Bul_S-Con", "Bul_S" },
                    { "Bul_S-Gre", "Bul_S" },
                    { "Fin-Stp_S", "Stp_S" },
                    { "Gas-Spa_N", "Spa_N" },
                    { "Gas-Spa_S", "Spa_S" },
                    { "Lvn-Stp_S", "Stp_S" },
                    { "LYO-Spa_S", "Spa_S" },
                    { "MAO-Spa_N", "Spa_N" },
                    { "MAO-Spa_S", "Spa_S" },
                    { "Mar-Spa_S", "Spa_S" },
                    { "Nwy-Stp_N", "Stp_N" },
                    { "Por-Spa_N", "Spa_N" },
                    { "Por-Spa_S", "Spa_S" },
                    { "Spa_S-WES", "Spa_S" }
                });

            migrationBuilder.CreateIndex(
                name: "IX_Boards_WorldId",
                table: "Boards",
                column: "WorldId");

            migrationBuilder.CreateIndex(
                name: "IX_Centres_BoardId",
                table: "Centres",
                column: "BoardId");

            migrationBuilder.CreateIndex(
                name: "IX_ConnectionMappings_RegionsId",
                table: "ConnectionMappings",
                column: "RegionsId");

            migrationBuilder.CreateIndex(
                name: "IX_Orders_UnitId",
                table: "Orders",
                column: "UnitId",
                unique: true,
                filter: "\"UnitId\" IS NOT NULL");

            migrationBuilder.CreateIndex(
                name: "IX_Orders_WorldId",
                table: "Orders",
                column: "WorldId");

            migrationBuilder.CreateIndex(
                name: "IX_Regions_ParentId",
                table: "Regions",
                column: "ParentId");

            migrationBuilder.CreateIndex(
                name: "IX_Units_BoardId",
                table: "Units",
                column: "BoardId");

            migrationBuilder.CreateIndex(
                name: "IX_Worlds_GameId",
                table: "Worlds",
                column: "GameId",
                unique: true);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Centres");

            migrationBuilder.DropTable(
                name: "ConnectionMappings");

            migrationBuilder.DropTable(
                name: "Orders");

            migrationBuilder.DropTable(
                name: "Connections");

            migrationBuilder.DropTable(
                name: "Regions");

            migrationBuilder.DropTable(
                name: "Units");

            migrationBuilder.DropTable(
                name: "Boards");

            migrationBuilder.DropTable(
                name: "Worlds");

            migrationBuilder.DropTable(
                name: "Games");
        }
    }
}
